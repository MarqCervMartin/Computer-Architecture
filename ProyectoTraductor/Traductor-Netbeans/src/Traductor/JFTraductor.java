package Traductor;
import java.io.File;
import java.util.Arrays;
import java.util.List;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Martín, Royer
 */
public class JFTraductor extends javax.swing.JFrame {
    //Instancias de JFile Chooser, Archivo y clase MetodoEnsamblaje
    JFileChooser seleccionado = new JFileChooser();
    DefaultTableModel modelo;
    File archivo;
    MetodoEnsamblaje Ensamblaje = new MetodoEnsamblaje();
    
    
    //Variables que segmentaran el código ejemplo: ADDWF 0x5C,F en "ADDWF","0x5C","F"
    private String opCode = "";
    private String d = "";
    private String bitFile = "";
    
    public String getOpCode() {
        return opCode;
    }

    public void setOpCode(String opCode) {
        this.opCode = opCode;
    }

    public String getD() {
        return d;
    }

    public void setD(String d) {
        this.d = d;
    }

    public String getBitFile() {
        return bitFile;
    }

    public void setBitFile(String bitFile) {
        this.bitFile = bitFile;
    }
    
    
    
    /**
     * Creates new form JFEnsamblador
     */
    public JFTraductor() {
        initComponents();
        TxtAreaFuente.setLineWrap(true);
        TxtAreaFuente.setWrapStyleWord(true);
        TxtAreaObjeto.setLineWrap(true);
        TxtAreaObjeto.setWrapStyleWord(true);
        modelo = new DefaultTableModel();
        modelo.addColumn("Linea");
        modelo.addColumn("OpCode");
        modelo.addColumn("Bit d");
        modelo.addColumn("Direccion");
        this.tabla.setModel(modelo);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BtnAbrirF = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TxtAreaFuente = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        TxtAreaObjeto = new javax.swing.JTextArea();
        BtnEnsamblar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        BntLimpiarF = new javax.swing.JButton();
        BtnLimpiarO = new javax.swing.JButton();
        BtnAbrirO = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Ensamblador");
        setMinimumSize(new java.awt.Dimension(1147, 447));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        BtnAbrirF.setText("Abrir Archivo");
        BtnAbrirF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnAbrirFActionPerformed(evt);
            }
        });
        getContentPane().add(BtnAbrirF, new org.netbeans.lib.awtextra.AbsoluteConstraints(162, 419, 115, -1));

        TxtAreaFuente.setColumns(20);
        TxtAreaFuente.setRows(5);
        jScrollPane1.setViewportView(TxtAreaFuente);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(33, 34, 260, 367));

        TxtAreaObjeto.setColumns(20);
        TxtAreaObjeto.setRows(5);
        jScrollPane2.setViewportView(TxtAreaObjeto);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 40, 260, 367));

        BtnEnsamblar.setText("Traducir  -->");
        BtnEnsamblar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnEnsamblarActionPerformed(evt);
            }
        });
        getContentPane().add(BtnEnsamblar, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 40, 230, 50));

        jLabel1.setText("Programa Fuente");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(122, 12, -1, -1));

        jLabel2.setText("Programa Objeto");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 20, -1, -1));

        BntLimpiarF.setText("Limpiar");
        BntLimpiarF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BntLimpiarFActionPerformed(evt);
            }
        });
        getContentPane().add(BntLimpiarF, new org.netbeans.lib.awtextra.AbsoluteConstraints(44, 419, 100, -1));

        BtnLimpiarO.setText("Limpiar");
        BtnLimpiarO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnLimpiarOActionPerformed(evt);
            }
        });
        getContentPane().add(BtnLimpiarO, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 420, 100, -1));

        BtnAbrirO.setText("Abrir Archivo");
        BtnAbrirO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnAbrirOActionPerformed(evt);
            }
        });
        getContentPane().add(BtnAbrirO, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 420, 117, -1));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/PIC.jpeg"))); // NOI18N
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 110, 230, 220));

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane4.setViewportView(tabla);

        getContentPane().add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 40, 290, 350));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void BtnAbrirFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnAbrirFActionPerformed
        // TODO add your handling code here:
        if(seleccionado.showDialog(this,"Abrir Programa Fuente") == JFileChooser.APPROVE_OPTION ){
            archivo = seleccionado.getSelectedFile();
            if(archivo.canRead() ){
                if(archivo.getName().endsWith("asm")){
                    String contenido = Ensamblaje.AbrirTexto(archivo);
                    TxtAreaFuente.setText(contenido);
                }else{
                    JOptionPane.showMessageDialog(null, "Porfavor seleccione un archivo con código fuente");
                }
            }
        }
    }//GEN-LAST:event_BtnAbrirFActionPerformed

    private void BtnEnsamblarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnEnsamblarActionPerformed
        // TODO add your handling code here:
        int fila = tabla.getRowCount();
        for(int i=fila-1;i>=0;i--){
            modelo.removeRow(i);
        }
        
         if(seleccionado.showDialog(this,"Traducir Código Fuente") == JFileChooser.APPROVE_OPTION ){
            archivo = seleccionado.getSelectedFile();
            String contenido = TxtAreaFuente.getText();
            String[] arrSplit = contenido.split("\\n"); 
            List<String> ConjuntoInstrucciones = Arrays.asList(arrSplit);
            //System.out.println(ConjuntoInstrucciones);
            String []info  = new String[4];
            int cont = 1;
            for(String i:ConjuntoInstrucciones){
                dividirOpCode(i);
                info[0] = ""+cont;
                info[1] = Instruccion(getOpCode());
                info[2] = bitAddress(getD());
                info[3] = Direccion(getBitFile());
                modelo.addRow(info);
                cont++;
            }
            
            String respuesta = Ensamblaje.EnsamblarTxt(archivo,contenido);
            /*Reestriccion de formato de archivo, solo formato txt*/
            if(respuesta !=null ){
                JOptionPane.showMessageDialog(null, respuesta);
                TxtAreaObjeto.setText(contenido);
            }else{
                JOptionPane.showMessageDialog(null, "Error al traducir");
            }
        }else{
                JOptionPane.showMessageDialog(null, "Se debe guardar en formato de texto (txt)");
         }
    }//GEN-LAST:event_BtnEnsamblarActionPerformed

    public String Instruccion(String conte){
        /* Compare instruction for Bit a Bit */
        switch(conte.toUpperCase()){
            //BYTE-ORIENTED FILE REGISTER OPERATIONS
            //Generamos numeros entre 0-127 para los bits de registro
            case "ADDWF" :
                return "00 0111";
            case "ANDWF":
                return "00 0101";
            case "CLRF":
                return "00 0001";
            case "CLRW":
                return "00 0001";
            case "COMF":
                return "00 1001";
            case "DECF":
                return "00 0011";
            case "DECFSZ":
                return "00 1011";
            case "INCF":
                return "00 1010";
            case "INCFSZ":
                return "00 1111";
            case "IORWF":
                return "00 0100";
            case "MOVF":
                return "00 1000";
            case "MOVWF":
                return "00 0000";
            case "NOP":
                return "00 0000 00";
            case "RLF":
                return "00 1101";
            case "RRF":
                return "00 1100";
            case "SUBWF":
                return "00 0010";
            case "SWAPF":
                return "00 1110";
            case "XORWF":
                return "00 0110";
                
            //BIT-ORIENTED FILE REGISTER OPERATIONS
            case "BCF":
                return "01 00";
            case "BSF":
                return "01 01";
            case "BTFSC":
                return "01 10";
            case "BTFSS":
                return "01 11";
            //LITERAL AND CONTROL OPERATIONS
            case "ADDLW":
                return "11 1110 kkkk kkkk\n";
            case "ANDLW":
                return "11 1001 kkkk kkkk\n";
            case "CALL":
                return "10 0kkk kkkk kkkk\n";
            case "CLRWDT":
                return "00 0000 0110 0100\n";
            case "GOTO":
                return "10 1kkk kkkk kkkk\n";
            case "IORLW":
                return "11 1000 kkkk kkkk\n";
            case "MOVLW":
                return "11 0000 kkkk kkkk\n";
            case "RETFIE":
                return "00 0000 0000 1001\n";
            case "RETLW":
                return "11 0100 kkkk kkkk\n";
            case "RETURN":
                return "00 0000 0000 1000\n";
            case "SLEEP":
                return "00 0000 0110 0011\n";
            case "SUBLW":
                return "11 1100 kkkk kkkk\n";
            case "XORLW":
                return "11 1010 kkkk kkkk\n";
            default:
                JOptionPane.showMessageDialog(null, "Instrucción no valida");

        }
        return null;
    }
    public String bitAddress(String b){
        switch(b.toUpperCase()){
            case "F":
                return "1";
            case "W":
                return "0";
            case "1":
                return"1";
            case "0":
                return "0";
            default:
                JOptionPane.showMessageDialog(null, "Falta bit address");
        }
        return null;
    }
    public String Direccion(String direc){
        String[] par = direc.split("x");
        String hexadecimal = par[1];
        //  "7F" = 127
        int decimal = Integer.parseInt(hexadecimal, 16);
        //System.out.printf("El hexadecimal %s es %d en hexadecimal usando Integer.parseInt\n", hexadecimal, decimal);
        if(decimal >0 && decimal<128){
            if(decimal == 1){
                return "000 000 1";
            }else{
                if(decimal < 4){
                    return "000 00"+Integer.toBinaryString(decimal);
                }else{
                    if(decimal < 8){
                        return "000 0"+Integer.toBinaryString(decimal);
                    }else{
                        if(decimal < 16){
                            return "000 "+Integer.toBinaryString(decimal);
                        }else{
                            if(decimal < 32){
                                return "00 "+Integer.toBinaryString(decimal);
                            }else{
                                if(decimal < 64){
                                    return "0 "+Integer.toBinaryString(decimal);
                                }else{
                                    return Integer.toBinaryString(decimal);
                                }
                            }
                        }
                    }
                }
            }
        }else{
            JOptionPane.showMessageDialog(null, "Direccion incorrecta es mayor a 7F");
        }
        return null;
    }
    
    public void dividirOpCode(String opCode){
        if(opCode == "CLRW" || opCode =="clrw" || opCode =="NOP" || opCode =="nop"){
            String[] primerasDosPartes = opCode.split(" ");
            setOpCode(primerasDosPartes[0]);
            String[] segundaParte = primerasDosPartes[1].split(",");
            setD(segundaParte[1]);
            setBitFile(segundaParte[0]);
            
        }else{
            String[] primerasDosPartes = opCode.split(" ");
            setOpCode(primerasDosPartes[0]);
            String[] segundaParte = primerasDosPartes[1].split(",");
            setD(segundaParte[1]);
            setBitFile(segundaParte[0]);
            //System.out.println("OpCode: "+getOpCode()+"\nBinFile: "+getBitFile()+"\nBit d: "+getD());
        }
            
        
    }

    private void BntLimpiarFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BntLimpiarFActionPerformed
        // TODO add your handling code here:
        TxtAreaFuente.setText("");
    }//GEN-LAST:event_BntLimpiarFActionPerformed

    private void BtnAbrirOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnAbrirOActionPerformed
        // TODO add your handling code here:
        if(seleccionado.showDialog(this,"Abrir Código Objeto") == JFileChooser.APPROVE_OPTION ){
            archivo = seleccionado.getSelectedFile();
            if(archivo.canRead() ){
                if(archivo.getName().endsWith("txt")){
                    String contenido = Ensamblaje.AbrirTexto(archivo);
                    TxtAreaObjeto.setText(contenido);
                }else{
                    JOptionPane.showMessageDialog(null, "Porfavor seleccione un archivo con código objeto");
                }
            }
        }
    }//GEN-LAST:event_BtnAbrirOActionPerformed

    private void BtnLimpiarOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnLimpiarOActionPerformed
        // TODO add your handling code here:
        TxtAreaObjeto.setText("");
        int fila = tabla.getRowCount();
        for(int i=fila-1;i>=0;i--){
            modelo.removeRow(i);
        }
    }//GEN-LAST:event_BtnLimpiarOActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFTraductor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFTraductor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFTraductor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFTraductor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFTraductor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BntLimpiarF;
    private javax.swing.JButton BtnAbrirF;
    private javax.swing.JButton BtnAbrirO;
    private javax.swing.JButton BtnEnsamblar;
    private javax.swing.JButton BtnLimpiarO;
    private javax.swing.JTextArea TxtAreaFuente;
    private javax.swing.JTextArea TxtAreaObjeto;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable tabla;
    // End of variables declaration//GEN-END:variables

    void setLocationRelativeTo() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
